// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "11/16/2016 14:50:12"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module sum1 (
	a,
	ovf,
	s);
input 	[4:0] a;
output 	ovf;
output 	[4:0] s;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \ovf~output_o ;
wire \s[0]~output_o ;
wire \s[1]~output_o ;
wire \s[2]~output_o ;
wire \s[3]~output_o ;
wire \s[4]~output_o ;
wire \a[4]~input_o ;
wire \a[3]~input_o ;
wire \a[2]~input_o ;
wire \a[0]~input_o ;
wire \a[1]~input_o ;
wire \Add1~0_combout ;
wire \Add0~0_combout ;
wire \Add0~1_combout ;
wire \Add0~2_combout ;
wire \Add1~1_combout ;


cyclonev_io_obuf \ovf~output (
	.i(\Add1~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ovf~output_o ),
	.obar());
// synopsys translate_off
defparam \ovf~output .bus_hold = "false";
defparam \ovf~output .open_drain_output = "false";
defparam \ovf~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[0]~output (
	.i(!\a[0]~input_o ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
defparam \s[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[1]~output (
	.i(\Add0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
defparam \s[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[2]~output (
	.i(\Add0~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[2]~output .bus_hold = "false";
defparam \s[2]~output .open_drain_output = "false";
defparam \s[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[3]~output (
	.i(\Add0~2_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[3]~output .bus_hold = "false";
defparam \s[3]~output .open_drain_output = "false";
defparam \s[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \s[4]~output (
	.i(\Add1~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[4]~output .bus_hold = "false";
defparam \s[4]~output .open_drain_output = "false";
defparam \s[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \a[4]~input (
	.i(a[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[4]~input_o ));
// synopsys translate_off
defparam \a[4]~input .bus_hold = "false";
defparam \a[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[3]~input (
	.i(a[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[3]~input_o ));
// synopsys translate_off
defparam \a[3]~input .bus_hold = "false";
defparam \a[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[2]~input (
	.i(a[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[2]~input_o ));
// synopsys translate_off
defparam \a[2]~input .bus_hold = "false";
defparam \a[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[0]~input (
	.i(a[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[0]~input_o ));
// synopsys translate_off
defparam \a[0]~input .bus_hold = "false";
defparam \a[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \a[1]~input (
	.i(a[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\a[1]~input_o ));
// synopsys translate_off
defparam \a[1]~input .bus_hold = "false";
defparam \a[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Add1~0 (
// Equation(s):
// \Add1~0_combout  = ( \a[1]~input_o  & ( (!\a[4]~input_o  & (\a[3]~input_o  & (\a[2]~input_o  & \a[0]~input_o ))) ) )

	.dataa(!\a[4]~input_o ),
	.datab(!\a[3]~input_o ),
	.datac(!\a[2]~input_o ),
	.datad(!\a[0]~input_o ),
	.datae(!\a[1]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add1~0 .extended_lut = "off";
defparam \Add1~0 .lut_mask = 64'h0000000200000002;
defparam \Add1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~0 (
// Equation(s):
// \Add0~0_combout  = !\a[0]~input_o  $ (!\a[1]~input_o )

	.dataa(!\a[0]~input_o ),
	.datab(!\a[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add0~0 .extended_lut = "off";
defparam \Add0~0 .lut_mask = 64'h6666666666666666;
defparam \Add0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~1 (
// Equation(s):
// \Add0~1_combout  = !\a[2]~input_o  $ (((!\a[0]~input_o ) # (!\a[1]~input_o )))

	.dataa(!\a[2]~input_o ),
	.datab(!\a[0]~input_o ),
	.datac(!\a[1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add0~1 .extended_lut = "off";
defparam \Add0~1 .lut_mask = 64'h5656565656565656;
defparam \Add0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~2 (
// Equation(s):
// \Add0~2_combout  = !\a[3]~input_o  $ (((!\a[2]~input_o ) # ((!\a[0]~input_o ) # (!\a[1]~input_o ))))

	.dataa(!\a[3]~input_o ),
	.datab(!\a[2]~input_o ),
	.datac(!\a[0]~input_o ),
	.datad(!\a[1]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add0~2 .extended_lut = "off";
defparam \Add0~2 .lut_mask = 64'h5556555655565556;
defparam \Add0~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add1~1 (
// Equation(s):
// \Add1~1_combout  = ( \a[1]~input_o  & ( !\a[4]~input_o  $ (((!\a[3]~input_o ) # ((!\a[2]~input_o ) # (!\a[0]~input_o )))) ) ) # ( !\a[1]~input_o  & ( \a[4]~input_o  ) )

	.dataa(!\a[4]~input_o ),
	.datab(!\a[3]~input_o ),
	.datac(!\a[2]~input_o ),
	.datad(!\a[0]~input_o ),
	.datae(!\a[1]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add1~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add1~1 .extended_lut = "off";
defparam \Add1~1 .lut_mask = 64'h5555555655555556;
defparam \Add1~1 .shared_arith = "off";
// synopsys translate_on

assign ovf = \ovf~output_o ;

assign s[0] = \s[0]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[2] = \s[2]~output_o ;

assign s[3] = \s[3]~output_o ;

assign s[4] = \s[4]~output_o ;

endmodule
